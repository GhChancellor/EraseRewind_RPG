---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 26/04/23 17:41
---

local debugDiagnostics = require("lib/DebugDiagnostics")
local modDataManager = require("lib/ModDataManager")
local patchSurvivalRewards = require("patch/survivalRewards/PatchSurvivalRewards")

local kilMilReachedValue = 15
local milReachedValue = 10
local reset = 0

local kilMilReached = "kilMilReachedX"
local milReached = "milReachedX"

---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
local function survivalRewards_TDD()
    local character = getPlayer()

    character:getModData().kilMilReached = kilMilReachedValue
    character:getModData().milReached = milReachedValue

    ---@type boolean
    local modIsActive = patchSurvivalRewards.isModActive()
    debugDiagnostics.checkTest(modIsActive, true, "Mod is Active")

    ---@type table
    local lines = {}
    table.insert(lines, character:getModData().kilMilReached)
    modDataManager.save(kilMilReached,
            lines )

    lines = {}
    table.insert(lines, character:getModData().milReached)
    modDataManager.save(milReached,
            lines )

    ---@type table
    local readKilMilReacheds = {}
    readKilMilReacheds = modDataManager.read(kilMilReached)

    ---@type table
    local readMilReacheds = {}
    readMilReacheds =modDataManager.read(milReached)

    ---@type int
    local readKilMilReached = 0

    ---@type int
    local readMilReached = 0

    readKilMilReached = readKilMilReacheds[1]

    readMilReached = readMilReacheds[1]

    --- **Check KilMilReached**
    debugDiagnostics.checkTest(kilMilReachedValue, readKilMilReached, "Read KilMilReached" )

    --- **Check MilReached**
    debugDiagnostics.checkTest(milReachedValue, readMilReached, "Read MilReached" )

    --- **Remove KilMilReached**
    modDataManager.remove(kilMilReached)

    --- **Remove MilReached**
    modDataManager.remove(milReached)

    --- **Check Remove KilMilReached**
    debugDiagnostics.checkTest(modDataManager.isExists(kilMilReached),
            false, "Remove KilMilReached" )

    --- **Check Remove MilReached**
    debugDiagnostics.checkTest(modDataManager.isExists(milReached),
            false, "Remove MilReached" )

    character:getModData().kilMilReached = reset
    character:getModData().milReached = reset

    debugDiagnostics.displayTest()
end

local function key82(character, key)
    if key == 82 then -- <<<< Numpad 0
        print("Key = Numpad 0 > createCharacter \n")
        debugDiagnostics.setVerbose(false)
        survivalRewards_TDD()
    end
end

---@param character IsoGameCharacter
local function key73(character, key)
    if key == 73 then -- <<<< numpad 9
        print("Key = numpad 9 > kill Character \n")
        character:die()
    end
end

local function onCustomUIKeyPressed(key)
    local character = getPlayer()

    key82(character, key) -- Numpad 0 character_TDD
    key73(character, key) -- Numpad 9 kill character
end

-- Events.OnCustomUIKeyPressed.Add(onCustomUIKeyPressed)
