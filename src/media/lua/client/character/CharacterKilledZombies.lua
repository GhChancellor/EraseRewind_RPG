---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 15/04/23 18:54
---

---@class CharacterKilledZombies

local CharacterKilledZombies = {}

local characterPz = require("lib/CharacterPZ")
local errHandler = require("lib/ErrHandler")
local pageBook = require("book/PageBook")
local modDataManager = require("lib/ModDataManager")

--- **Read Zombies Killed From Hd**
---@return table int ( killed zombies )
local function readKilledZombiesFromHd()
    return modDataManager.read(pageBook.Character.KILLED_ZOMBIES)
end

--- **Create Zombies Kills**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function CharacterKilledZombies.readBook(character)
    --- **Check if mod-data killedZombies is exits**
    if not modDataManager.isExists(pageBook.Character.KILLED_ZOMBIES) then
        errHandler.errMsg("CharacterKilledZombies.readBook(character)",
                " mod-data " .. pageBook.Character.KILLED_ZOMBIES .. " not exists")
        return nil
    end

    ---@type table
    ---@return int ( killed zombies )
    local killedZombies = readKilledZombiesFromHd()

     characterPz.setZombieKills_PZ(character, killedZombies[1])

end

--- **Write Zombies Kills To Hd**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function CharacterKilledZombies.writeBook(character)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("CharacterKilledZombies.writeBook(character)",
                errHandler.err.IS_NULL_CHARACTERS)
        return nil
    end

    --- **Remove Killed Zombies form mod-data**
    modDataManager.remove(pageBook.Character.KILLED_ZOMBIES)

    ---@type table int ( killed zombies )
    local killedZombies = {}
    table.insert(killedZombies, characterPz.getZombieKills_PZ(character))

    --- **Save Killed Zombies to mod-data**
    modDataManager.save(pageBook.Character.KILLED_ZOMBIES,
            killedZombies)

end

return CharacterKilledZombies