---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 12/10/23 20:51
---

require "ISUI/ISInventoryPaneContextMenu"
local characterManagement = require("CharacterManagement")
local debugDiagnostics = require("lib/DebugDiagnostics")
local readOnceBook = require("ReadOnceBook")
local timedBook = require("TimedBook")

---@type string
local translation

---@type table
local readBook = {
    ReadOnceBook = "ReadOnceBook",
    TimedBook = "TimedBook",
}

--- **Get read book**
---@param item InventoryItem
---@return boolean
--- - InventoryItem : zombie.inventory.InventoryItem
local function getReadBook(item)
    --- **Selected book**
    return item:getType()
end

--- **Save player**
---@param item InventoryItem
---@param character IsoGameCharacter
---@return void
--- - InventoryItem : zombie.inventory.InventoryItem
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
local function onSavePlayer(item, character)
    ---@type string
    local openBook = "OpenBook"

    ---@type string
    local closeBook = "CloseBook"

    --- **Translate to selected language**
    translation = getText( "ContextMenu_WrittenBook") .. " - " ..
            getText("ContextMenu_RebootClient")

    --- **Play sound**
    character:playSound(openBook)

    local flag01 = false

    local dbg1 = item:getType()
    local dbg

    if item:getType() == readBook["ReadOnceBook"] then
        local dbg1 = item:getType()
        local dbg
        --- **Write mod-data - Write book**
        readOnceBook.writeBook(character, item)
        flag01 = true
    elseif item:getType() == readBook["TimedBook"] then
        local dbg2 = item:getType()
        local dbg
        --- **Write mod-data - Write book**
        if timedBook.writeBook(character, item) then
            flag01 = true
        else
            --- **You can't transcribe this book yet**
            translation = getText( "ContextMenu_ToEarly")
            flag01 = false
        end
    end

    if flag01 then
        --- **Add player name to read Once Book journal**
        item:setName(item:getName() .. " - " .. character:getFullName() )
    end

    --- **Say message**
    character:Say(translation)

    --- **Play sound**
    character:playSound(closeBook)
end

--- **Write book**
---@param context ISInventoryPaneContextMenu
---@param items InventoryItem
---@return void
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
--- - ISInventoryPaneContextMenu : zombie.ui.ISInventoryPaneContextMenu
--- - InventoryItem : zombie.inventory.InventoryItem
local function addSaveContext(character, context, items)
    --- **Translate to selected language**
    translation = getText("ContextMenu_TranscribeBook")

    ---@type InventoryItem
    local item

    ---@type IsoGameCharacter
    local character = debugDiagnostics.characterUpdate()

    for _, v in ipairs(items) do
        if not instanceof(v, "InventoryItem") then
            item = v.items[1]
        end

        if getReadBook(item) then
            -- **Add option ( text ) to context menu**
            context:addOption(translation, item, onSavePlayer, character)
        end

    end
end

Events.OnPreFillInventoryObjectContextMenu.Add(addSaveContext)