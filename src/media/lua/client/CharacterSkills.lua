---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 15/04/23 13:52
---

require("media.lua.shared.objects.CharacterObj")

local nameModData = "characterPerkDetails"

---Read Character Perk Details From Hd
---@return table string profession, PerkFactory.Perk perk, int level, float xp, boolean flag
local function readCharacterPerkDetailsFromHd()

    local characterPerkDetails =
        ModData.get(nameModData)

    local lines = {}

    local CharacterObj01 = CharacterObj:new(nil)

    for _, v in pairs(characterPerkDetails) do
        for s in v:gmatch("[^\r-]+") do
            table.insert(lines, s)
        end

        CharacterObj01:addPerkDetails(getPerkFromName_PZ(lines[1]),
                tonumber(lines[2]),
                tonumber(lines[3]) + 0.0)

        lines = {}
    end

    return CharacterObj01:getPerkDetails()
end

---Delete  all skills Character
---@param character IsoGameCharacter
local function deleteCharacter(character)
    local CharacterAllSkillsObj = CharacterObj:new(nil)

    CharacterAllSkillsObj = getCharacterAllSkills(character)

    for _, v in pairs(CharacterAllSkillsObj) do
        removePerkLevel(character, v:getPerk())
    end
end

---Copy Character Skill
---@param character IsoGameCharacter
function createCharacterSkill(character)
    local characterSkills = {}
    characterSkills = readCharacterPerkDetailsFromHd()

    deleteCharacter(character)

    for _, v in pairs(characterSkills) do
        setPerkLevel(character, v.perk, v.xp)
    end
end

---Write Character Perk Details To Hd
---@param character IsoGameCharacter
function writeCharacterPerkDetailsToHd(character)
    ModData.remove(nameModData)

    local lines = {}

    local CharacterAllSkillsObj = getCharacterAllSkills(character)

    CharacterAllSkillsObj = getCharacterAllSkills(character)

    for i, v in pairs(CharacterAllSkillsObj) do
        lines[i] = ( v.perk:getName() .. "-" ..
                tostring(v.level)  .. "-" ..
                tostring(v.xp) )

        ModData.add(nameModData, lines)
    end
end




